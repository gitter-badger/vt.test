<?xml version="1.0" encoding="UTF-8"?>
<project name="Vliegtickets" default="build" basedir="." description="This is a buildfile for Vliegtickest project.">
    <!-- Required properties -->
    <property name="base.dir" value="/home/maglovanyi/WORKSHOP/m.vliegtickets.jenkins" override="true"/>
    <property name="vendors.dir" value="${base.dir}/../library/Symfony/vendor" />
    <property name="source.dir" value="${base.dir}/src" />
    <property name="build.dir" value="${base.dir}/app/build" />
    
    <!-- Filesets -->
    <fileset id="sourcecode" dir="${source.dir}">
        <include name="**/*.php"/>
        <exclude name="Tests/"/>
        <exclude name="vendor/"/>
    </fileset>
    
     <!-- Project build clean -->
    <target name="clean" description="Cleanup build artifacts">
        <delete dir="${build.dir}/api"/>
        <delete dir="${build.dir}/code-browser"/>
        <delete dir="${build.dir}/coverage"/>
        <delete dir="${build.dir}/logs"/>
        <delete dir="${build.dir}/pdepend"/>
        <delete dir="${build.dir}/docs/*"/>
    </target>
    
    <!-- Project build prepare -->
    <target name="prepare" depends="clean" description="Prepare for build">
        <mkdir dir="${build.dir}/api"/>
        <mkdir dir="${build.dir}/code-browser"/>
        <mkdir dir="${build.dir}/coverage"/>
        <mkdir dir="${build.dir}/logs"/>
        <mkdir dir="${build.dir}/pdepend"/>
    </target>
    
    <target name="install:composer" description="Installing composer">
        <echo msg="Fetching Composer"/>
        <exec
            command="curl -sS https://getcomposer.org/installer | php"
            passthru="true"/>
    </target>
    
    <target name="install:phpmd" description="Install PHPMD globally">
        <exec
            command="wget -c http://static.phpmd.org/php/latest/phpmd.phar"
            checkreturn="true"
            passthru="true"
            level="verbose"/>   
    </target>   
    
    <target name="vendors" depends="install:composer" description="Update vendors">
         <exec command="php composer.phar update" checkreturn="true" passthru="true" level="verbose">
            <arg value="--optimize-autoloader" />
        </exec>      
    </target>
    
    <!-- Syntax errors detector -->
    <target name="lint" description="Check syntax of source.">
        <phplint>
            <fileset refid="sourcecode" />
        </phplint>
    </target>
    
    <!-- copy/paste detector -->
    <target name="check:cpd" description="Checks similar code blocks.">
        <echo msg="Checking similar code blocks ..."/>
        <phpcpd>
            <fileset refid="sourcecode"/>
            <formatter type="pmd" outfile="${dir.reports}/pmd-cpd.xml"/>
        </phpcpd>
    </target>

    <!-- Mess detector -->
    <target name="phpmd" depends="install:phpmd" description="Perform project mess detection using PHPMD and print human readable output. Intended for usage on the command line before committing.">
        <exec command="php phpmd.phar ${source.dir}/**/*.php xml codesize,design,naming,unusedcode --reportfile ${build.dir}/logs/phpmd.xml" />
    </target>
    
    <target name="phpmd-ci" description="Perform project mess detection using PHPMD creating a log file for the continuous integration server">
        <exec executable="phpmd">
            <arg path="${source.dir}" />
            <arg value="xml" />
            <arg value="${build.dir}/logs/phpmd.xml" />
            <arg value="--reportfile" />
            <arg value="${build.dir}/logs/pmd.xml" />
        </exec>
    </target>

    <target name="phpunit" description="Run unit tests with PHPUnit">
        <exec executable="phpunit" passthru="true" checkreturn="true">
            <arg value="-c" />
            <arg path="${base.dir}/app/phpunit.xml.dist" />
        </exec>
    </target>

    <!-- Default target -->
    <target name="build" depends="prepare,vendors,lint,phpmd-ci,phpunit"></target>
</project>